import "example1.pa";	// import all from example1.pa.
import x, a from "example2.pa";
import printf from <stdio.h>;

int64 x = 10, y = x+3;
int32 a=10, (int32 a1, a2) = myFunc(x-3);

(int32 b1, b2) = (3, 5);
(var z, zz) = myFunc(x);
(int32 z1, int64 z2) = myFunc(x);
(int32 _, int64 zzz) = myFunc(x);
 
 myFunc(x) -> (z, );
// 
// export type MyType {
// 	int64 y;
// 	@MyType next;
// };
// 
// (MyType t, MyType z[x,z+3]) = myFuncZ();
// 
// func myFunc(int32 size)
// 	-> (int32 z, int64 zz)
// {
// 	flo64 my_arr[size+1,3];
// 	flo32 $farr[] = [12,34][56,78];
// 	MyType mt;
// 	MyType $mt[tt]$[];
// 
// 	return 3, 4;
// }
